---
- name: Manage Firewall
  hosts: smartcenter-api
  gather_facts: False

  vars:
    project_code_name: flow-fusion
    project_state: present

    db_data:
      stage:
        db_host_ip: "192.168.150.10"
        db_host_snat_ip: "172.27.55.221"
        db_host_netmask: "255.255.255.0"
      prod:
        db_host_ip: "192.168.150.20"
        db_host_snat_ip: "172.27.55.222"
        db_host_netmask: "255.255.255.0"
    install_access_policy: true

  tasks:

    - name: debug
      debug:
        var: deploy_env

    - name: Get Check Point version
      check_point.mgmt.cp_mgmt_show_api_versions:
      register: ckp_api_version_information

    - name: Delete rules if project is deleted
      block:
        - name: Get a list of rules, where this object is used
          check_point.mgmt.cp_mgmt_where_used:
            name: "{{ project_code_name }}-db-{{ deploy_env }}"
            details_level: standard
          register: usage_info

        - name: Delete all rules where this object is used
          check_point.mgmt.cp_mgmt_access_rule:
            name: "{{ item.rule.name }}"
            layer: "{{ item.layer.name }}"
            position: "{{ item.position }}"
            state: absent
          loop: "{{ usage_info['where-used']['used-directly']['access-control-rules'] }}"
      when: project_state == 'absent'

    - name: Manage Check Point host object for database
      check_point.mgmt.cp_mgmt_host:
        name: "{{ project_code_name }}-db-{{ deploy_env }}"
        ipv4_address: "{{ db_data[deploy_env]['db_host_ip'] }}"
        nat_settings:
          auto_rule: True
          ip_address: "{{ db_data[deploy_env]['db_host_snat_ip'] }}"
          method: static
        color: "forest green"
        comments: "Project {{ project_code_name }}"
        groups: []
        ignore_errors: true
        ignore_warnings: true
        state: "{{ project_state }}"
      notify: 
        - Publish Changes
        - Install Access Policy

    - name: Create a new rule section for the project's rules
      check_point.mgmt.cp_mgmt_access_section:
        name: "[{{ deploy_env }}] - {{ project_code_name }} Rules"
        layer: "Network"
        relative_position:
          below: "Automation Rules"
        state: "{{ project_state }}"
      notify: 
        - Publish Changes
        - Install Access Policy

    - name: Add rules for the project
      block:

        - name: add-access-rule for ssh
          check_point.mgmt.cp_mgmt_access_rule:
            layer: Network
            name: "[{{ deploy_env }}] - Allow SSH Access for Admins"
            relative_position:
              below: "[{{ deploy_env }}] - {{ project_code_name }} Rules"
            enabled: true
            action: Accept
            track:
              type: Log
            source:
              - "n.internal.192.168.206.1-24"
            destination:
              - "{{ project_code_name }}-db-{{ deploy_env }}"
            service:
              - ssh_version_2
            comments: "This rule is managed by Ansible"
            vpn: Any
            state: present
          notify: 
            - Publish Changes
            - Install Access Policy

        - name: add-access-rule for mysql
          check_point.mgmt.cp_mgmt_access_rule:
            layer: Network
            name: "[{{ deploy_env }}] - Allow MySQL Access for Frontend"
            relative_position:
              below: "[{{ deploy_env }}] - {{ project_code_name }} Rules"
            enabled: true
            action: Accept
            track:
              type: Log
            source:
              - "Any"
            destination:
              - "{{ project_code_name }}-db-{{ deploy_env }}"
            service:
              - MySQL
            comments: "This rule is managed by Ansible"
            vpn: Any
            state: "{{ project_state }}"
          notify: 
            - Publish Changes
            - Install Access Policy
      when: project_state == 'present'

  handlers:

    - name: Publish Changes
      check_point.mgmt.cp_mgmt_publish:

    - name: Install Access Policy
      check_point.mgmt.cp_mgmt_install_policy:
        access: true
        policy_package: Standard
      when: install_access_policy is true
